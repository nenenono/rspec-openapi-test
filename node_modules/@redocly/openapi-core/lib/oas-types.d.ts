import { Oas3Rule, Oas3Preprocessor, Oas2Rule, Oas2Preprocessor, Async2Preprocessor, Async2Rule } from './visitors';
export declare type RuleSet<T> = Record<string, T>;
export declare enum SpecVersion {
    OAS2 = "oas2",
    OAS3_0 = "oas3_0",
    OAS3_1 = "oas3_1",
    Async2 = "async2"
}
export declare enum SpecMajorVersion {
    OAS2 = "oas2",
    OAS3 = "oas3",
    Async2 = "async2"
}
export declare type Oas3RuleSet = Record<string, Oas3Rule>;
export declare type Oas2RuleSet = Record<string, Oas2Rule>;
export declare type Async2RuleSet = Record<string, Async2Rule>;
export declare type Oas3PreprocessorsSet = Record<string, Oas3Preprocessor>;
export declare type Oas2PreprocessorsSet = Record<string, Oas2Preprocessor>;
export declare type Async2PreprocessorsSet = Record<string, Async2Preprocessor>;
export declare type Oas3DecoratorsSet = Record<string, Oas3Preprocessor>;
export declare type Oas2DecoratorsSet = Record<string, Oas2Preprocessor>;
export declare type Async2DecoratorsSet = Record<string, Async2Preprocessor>;
export declare function detectSpec(root: any): SpecVersion;
export declare function getMajorSpecVersion(version: SpecVersion): SpecMajorVersion;
export declare function getTypes(spec: SpecVersion): Record<string, import("./types").NodeType>;
